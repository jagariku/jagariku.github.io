---
import "../style/style.css";
---

<!doctype html>
<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" href="favicon.svg" />
    <title>バトルグラウンド攻略サイト</title>
  </head>
  <!-- Google tag (gtag.js) -->
  <script async src="https://www.googletagmanager.com/gtag/js?id=G-2Q5FCZYQXF"
  ></script>
  <script type="text/partytown">
    window.dataLayer = window.dataLayer || [];
    function gtag() {
      dataLayer.push(arguments);
    }
    gtag("js", new Date());

    gtag("config", "G-2Q5FCZYQXF");
  </script>

  <body>
    <header>
      <h1>バトルグラウンド攻略サイト</h1>
      <nav>
        <ul>
          <li><a href="#hero">各種ヒーロー解説</a></li>
        </ul>
      </nav>
    </header>

    <main>
      <section id="hero">
        <h2>各種ヒーロー解説</h2>
        <label>
          画像表示
          <input type="checkbox" id="is-display-hero-img" checked />
        </label>
        <label>
          効果表示
          <input type="checkbox" id="is-display-hero-power" />
        </label>
        <div id="cards-container"></div>
        <!-- 攻略のヒントのコンテンツ -->
      </section>
    </main>

    <footer>
      <p>&copy; 2024 バトルグラウンド攻略サイト</p>
    </footer>
  </body>
</html>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    fetch("json/hero.json")
      .then((response) => response.json())
      .then(
        (data: {
          cards: Array<{
            battlegrounds: { hero: boolean };
            id: number;
            slug: string;
            name: string;
            image: string;
            armor: number;
          }>;
        }) => {
          const heros = data.cards.filter((card) => card.battlegrounds.hero);
          fetch("json/hero-detail.json")
            .then((response) => response.json())
            .then(
              (detail: {
                cards: Array<{ parentId: number; text: string }>;
              }) => {
                const container = document.getElementById("cards-container");

                heros.forEach((card) => {
                  const cardElement = document.createElement("div");

                  const detailData = detail.cards.filter(
                    (detailCard) => detailCard.parentId === card.id
                  );
                  cardElement.innerHTML = `
                <div class="hero-item">
                    <a href="hero/${card.slug}">
                        <div>
                            <h3>${card.name}</h3>
                            <img 
                                src="${card.image}" alt="${card.name}" 
                                style="width:100px;
                            ">
                            <p class="hero-power">
                                効果: ${
                                  detailData.length
                                    ? detailData[0].text
                                    : "準備中"
                                }
                            </p>
                            <p class="hero-power">アーマー: ${card.armor}</p>
                        </div>
                    </a>
                </div>
                `;
                  cardElement.classList.add("hero");
                  container?.appendChild(cardElement);
                });
              }
            )
            .catch((error: Error) => {
              console.error("データの取得に失敗しました:", error);
            });
        }
      )
      .catch((error: Error) => {
        console.error("データの取得に失敗しました:", error);
      });
  });

  document.addEventListener("DOMContentLoaded", function () {
    const isDisplayHeroImg = document.getElementById(
      "is-display-hero-img"
    ) as HTMLInputElement;
    const isDisplayHeroPower = document.getElementById(
      "is-display-hero-power"
    ) as HTMLInputElement;

    function toggleImg() {
      const images = document.querySelectorAll(
        "#cards-container img"
      ) as NodeListOf<HTMLElement>;
      images.forEach(function (img) {
        img.style.display = isDisplayHeroImg.checked ? "block" : "none";
      });
    }

    function togglePower() {
      const heroPowers = document.querySelectorAll(
        "#cards-container .hero-power"
      ) as NodeListOf<HTMLElement>;
      heroPowers.forEach(function (heroPower) {
        heroPower.style.display = isDisplayHeroPower.checked ? "block" : "none";
      });
    }

    isDisplayHeroImg.addEventListener("change", toggleImg);
    isDisplayHeroPower.addEventListener("change", togglePower);
  });
</script>
